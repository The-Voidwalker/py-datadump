name: Pylint and style enforcement

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint black requests
    - name: Format with black
      run: |
        black $(git ls-files '*.py')
    - name: Commit changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if ! git diff --exit-code --quiet; then
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"
          git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git checkout -b ${GITHUB_HEAD_REF}
          git add .
          git commit -am "CI: lint code with black" -m "Check commit and GitHub actions for more details"
          git pull origin ${GITHUB_HEAD_REF} --rebase
          git push --set-upstream origin ${GITHUB_HEAD_REF}
        else
          echo "No changes to commit"
        fi
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')
